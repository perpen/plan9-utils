#!/bin/rc
# Without params, behaves like 'new'.
# If given params, differences with 'new':
# - Runs asynchronously
# - Redirects stderr to the window
# - The command status is shown in the window after completion
# - While commands are running:
#	- A Kill command is placed in the tag
#	- The window is marked as dirty
#      - Del does not delete
# - If given a single param containing a space (or | ; & \n \t), then
#   it will be run with "rc -c".
# Bugs:
# - Does not support chording on acme builtins like Look or Edit

rfork e

cmd=$*
piped=n
switch($#cmd){
case 0
	piped=y
	name=`{pwd} ^ /-
case *
	if(echo -n $1 | ssam 'x/[ 	|&;\n]/c/â€¡/' | grep -s â€¡){
		if(! ~ $#cmd 1){
			echo 'n: compound shell command not only param' >[1=2]
			exit usage
		}
		cmd=(rc -c $"*)
		name=`{pwd} ^ /-- # "/-rc" would look like a win window
	}
	if not
		name=`{pwd} ^ /- ^ `{basename $cmd(1)}
}

winid=`{cat /mnt/acme/new/ctl | awk '{print $1}'}
w=/mnt/acme/$winid
tmp=/tmp/n.$pid
pidfile=$tmp.pid
echo 'name ' ^ $name > $w/ctl

if(~ $piped y){
	cat > $w/body
	if(test -d $w) # window may have been deleted
		echo clean > $w/ctl
	exit
}

echo -n 'Kill' >$w/tag

fn removeKill{
	cat $w/tag >$tmp.tag
	echo cleartag > $w/ctl
	ssam 's/^[^|]+\| *(.*) Kill(.*)/ \1\2/' $tmp.tag >$w/tag
}

{
	echo dirty >$w/ctl
	$cmd >[2=1]
	xstatus=$status
	if(! ~ $"xstatus '')
		echo '#status:' $xstatus
	echo clean > $w/ctl
	echo menu >$w/ctl
	removeKill
	rm $tmp^*
} > $w/body &
echo $apid >$pidfile

fn handleevent{
	orig=$1; type=$2; q0=$3; q1=$4; eq0=$5; eq1=$6; flag=$7; textlen=$8; text=$9; chordarg=$10; chordorig=$11

	switch($type-$text){
	case [Xx]-Get [Xx]-Put
		if(! test -f $cmdpidfile){
			runcmd &
			sleep .1
		}
	case [Xx]-Kill
		if(test -f $pidfile){
			pg=/proc/ ^ `{cat $pidfile} ^ /notepg
			if(test -f $pg)
				echo kill >$pg
			rm $pidfile
			echo '#killed' >$w/body
			echo clean >$w/ctl
			echo menu >$w/ctl
			removeKill
		}
	case [Xx]-Del
		if(test -f $pidfile)
			echo 'command still running' >$w/errors
		if not
			echo del >$w/ctl >[2]/dev/null && exit
	case [XxLl]-*
		if(! ~ $chordarg ''){
			$text $chordarg
		}
		if not{
			echo $orig ^ $type $q0 $q1 >$w/event
		}
	}
}

. <{acmeevent} &
