#!/bin/rc
# wip
rfork e

usage='Usage: out [-e] [-t tag] name cmd [param ...]

Runs the command and redirect its output to the window with given
name, creating it if needed. On command completion dot is moved to
top of output by looking for "^#" from the end.

  -e	only redirect stderr to the window
  -h S	before each output add line "# S"
  -t	S	add given string to the tag

If option -h is not used, the invoked cmd should print a line starting
with # before the rest of the output, as the dot is going to be moved to
this position. Yuck

Examples: See Ctx, G, Lookman

Bugs:
- does not recreate the window if deleted and the command has more
  output.
- if run in parallel, commands outputs are mixed up.'

fn usage{
	echo $usage >[1=2]
	exit usage
}

onlyerr=n
tagextra=''
header=''
while(~ $1 -e -t -h){
	switch($1){
	case -e
		onlyerr=y
	case -t
		tagextra=$2
		shift
	case -h
		header=$2
		shift
	}
	shift
}
if(~ $#* 0 1) usage

name=$1
shift

{
	if(~ $onlyerr y)
		$*
	if not{
		$* >[1=2]
		# show status + notify of completion
		#echo '#status:' $status >[1=2]
	}
} |[2] {
	first=`{read}
	if(! ~ $first ''){
		namerx=`{echo $name | sed 's/([\+\/])/\\\1/g'}
		id=`{awk '/[0-9] +' ^ $namerx ^ ' / {print $1}' /mnt/acme/index}
		if(~ $id ''){
			id=`{cat /mnt/acme/new/ctl | awk '{print $1}'}
			w=/mnt/acme/$id
			echo -n $"tagextra >$w/tag
		}
		w=/mnt/acme/$id
		echo name $name >$w/ctl
		echo nomenu >$w/ctl
		echo scratch >$w/ctl
		{
			if(! ~ $header ''){
				echo -n '# ' ^ $header ^ ' '
				if(~ $onlyerr y)
					echo ' (stderr)'
				if not
					echo
			}
			echo $first
			cat
			echo
		} >$w/body
		test -d $w && echo clean >$w/ctl

		>$w/addr {
			echo -n '$-/^# /-#0' || {
				echo 'Out: command did not print the # marker' >[1=2]
				exit usage
			}
			echo 'dot=addr' >$w/ctl
		}
		echo show >$w/ctl
	}
}
exit ''
